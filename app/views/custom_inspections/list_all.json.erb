{
 success: true,
 items: [
 {
  xtype: 'container',
  closable: true,
  is_main_panel: true,
  
  title: 'Richieste - ALL',
    layout: {
	    type: 'vbox',
	    pack: 'start',
	    align: 'stretch'
	},
	
  	viewModel: {
			data: {
			}	
	},  	

  items: [
       
   // grid con righe import
		 {
				flex: 1,
				layout: 'fit',
        	    title: 'Elenco richieste - ALL', flex: 50,
        	    tools: [
                ],
        	    xtype: 'gridpanel',        	            	    
        	    
				dockedItems: [
		        	   { 
		        	    xtype: 'toolbar', dock: 'top', itemId: 'toptoolbar',
		        	    items: [		        	    
		        	    
						  {
						    xtype: 'form', height: 30,
						    layout: {
							    type: 'hbox',
							    pack: 'start',
							    align: 'stretch'
							},
							defaults: {
								margin: 5
							},
						    items: [
							    	{
										xtype: 'textfield',
						                name: 'flt_num_container',
						                emptyText: 'Container'
							      	}, {	
											xtype: 'datefield', labelAlign: 'right', width: 140,
											padding: '0 0 0 5',
							                name: 'flt_date_from',
							                emptyText: 'Da seguire dal'
							 		}, {	
											xtype: 'datefield', labelAlign: 'right',  width: 140,
											padding: '0 0 0 5',
											name: 'flt_date_to',
							                emptyText: '.. al'
							                
							 		}, {
							 			xtype: 'fieldcontainer', padding: '5 5 5 5', layout: 'hbox', items: [
											{													
														xtype: 'checkboxfield',														
										                boxLabel: 'Eseguite',
										                margin: '0px 8px 0px 0px',
										                name: 'show_executed', inputValue: 1, value: 1, uncheckedValue: 0
										    }, {													
														xtype: 'checkboxfield',														
										                boxLabel: 'Non seguite',
										                name: 'show_not_executed', inputValue: 1, value: 1, uncheckedValue: 0
										      }							 			
							 			]
							 		}
						    	]
						 	}
		        	     , '->',
		        	    	{iconCls: 'fa fa-filter fa-2x', text: 'Filtra', scale: 'large', 
						 		handler: function(event, toolEl, panel){ 
				 						var loc_grid = this.up('grid');
		 								var header_form = loc_grid.getDockedComponent('toptoolbar').down('form').getForm();
		 								loc_grid.getStore().proxy.extraParams.f_values = header_form.getValues(); 						 						
				 						loc_grid.getStore().load();
						 			}
						 		}
						 , {iconCls: 'fa fa-print fa-2x', scale: 'large', 
						 		handler: function(event, toolEl, panel){ 
				 						
				 						var loc_grid = this.up('grid'),
		 								    header_form = loc_grid.getDockedComponent('toptoolbar').down('form');
				 						
							            if(header_form.getForm().isValid()){
							                header_form.getForm().submit({
							                    method: 'POST',
							                    url: '<%= url_for(:controller=>'custom_inspections', :action=>'list_r', :authenticity_token => form_authenticity_token) -%>',             
							                    params: {formValues: Ext.encode(header_form.getValues())},
							                    method: 'POST',
							                    standardSubmit: true,
							                    target: '_blank'
							                });
							            }
								 	}
						 		}		
						 , {iconCls: 'fa fa-close fa-2x', scale: 'large', 
						 		handler: function(event, toolEl, panel){ 
				 						this.up('container[is_main_panel=true]').destroy();
						 			}
						 		}	        	    
						      	

		        	    		        	     
						 ]
					  }
					],        	    
        	    		        		        
				autoScroll: true,  
				scroll: true,      	    
        	    store: new Ext.data.Store({
        	    	autoLoad: true,
        	    	fields: [],
        	    	proxy: {
        	            url: <%= raw  (root_path + 'custom_inspections/list_all_data').to_json -%>,
        	            extraParams: {
        	            },
        	            reader: {
        	                type: 'json',
							method: 'POST',        	                
        	                rootProperty: 'items'
        	            },
        	            paramsAsJson: true,
						method: 'POST',
						type: 'ajax',
			
						//Add these two properties
						actionMethods: {
							read: 'POST'
						},        	            
        	            
        	        }
        	        
        	    }),
        	   
 		        	   
        	           	   
        	           	    
        	    
			    columns: [{
			        dataIndex: 'container_number',
			        text: 'Seq',
			        width: 50,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         return '<h5>' + (rowIndex + 1) + '</h5>';
			        }			        
			    }, {
			        dataIndex: 'container_number',
			        text: 'Container',
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         ret = '<h1>' + rec.get('container_number') + '</h1>';
			         
			         if (!Ext.isEmpty(rec.get('creation_notes')))
			           ret += '<p>' + rec.get('creation_notes') + '</p>';
			         
			         ret += '<p>';
			         ret += rec.data.activity.shipowner.name;
			         
					  if (!Ext.isEmpty(rec.get('activity').created_user_name))
					  	ret += '<br><font size=1>[' + rec.get('activity').created_user_name + '</font>]';

			         ret += '</p>';
			         return ret;			         
			        }			        
			    }
			    				    
				, {	
			        dataIndex: 'container_number',
			        text: 'Dettagli',
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {			         
			           ret = '';
			           ret = '<h3>' + rec.data.activity.activity_op.name + '</h3>';
			           ret += '<h3>' + rec.data.activity.customer.name + '</3>';			           
			           
			           return ret;
			         			         			        
			        }			        	        
			    }	


			    , {
			        dataIndex: 'container_number',
			        text: 'Da effetturare il',
			        width: 150, align: 'center',
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         var me = this; //me = grid;			          			         
			           ret = '<h3>' + Ext.util.Format.date(rec.get('activity').expiration_date, 'd/m/y') + '</h3>';
			           
			           if (rec.get('activity').to_be_made_available == true){
			           	if (!Ext.isEmpty(rec.get('make_available_at')))
			           		ret += '<p>Messa a disposizione<br/> il ' + Ext.util.Format.date(rec.get('make_available_at'), 'd/m/y H.i') + '</p>';
			           	else
			           		ret += '<p>Messa a disposizione<br/>non ancora eseguita</p>';
			           }
			           
			           if (!Ext.isEmpty(rec.get('dra_out')))
			           		ret += '<p>' + rec.get('dra_out') + '</p>';
			           
			           return ret;
			        }			        
			    }

			    
			    , {
			        dataIndex: 'container_number',
			        text: 'Visita eseguita',
			        width: 150, align: 'center',
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         var me = this; //me = grid;			          
			         
			         
			          if (!Ext.isEmpty(rec.get('execution_at'))){
			           ret = '<h3 style="color: green;">' + Ext.util.Format.date(rec.get('execution_at'), 'd/m/y H:i') + '</h3>';
			           
					  if (!Ext.isEmpty(rec.get('execution_user_name')))
					  	ret += '<font size=1>[' + rec.get('execution_user_name') + '</font>]';
			           
			           return ret;
			          }
			        }			        
			    }
			    		    
			    			    
			    , {
			        dataIndex: 'container_number',
			        text: 'Visita confermata',
			        width: 150, align: 'center',
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         var me = this; //me = grid;			          
			         
			           if (!Ext.isEmpty(rec.get('confirmed_at'))){
			             ret = '<h3 style="color: green;">' + Ext.util.Format.date(rec.get('confirmed_at'), 'd/m/y H:i') + '</h3>';
			             
					  if (!Ext.isEmpty(rec.get('confirmed_user_name')))
					  	ret += '<font size=1>[' + rec.get('confirmed_user_name') + '</font>]';
			             
			             return ret;
			           }
			        }			        
			    }

        ] //columns
               

                        	    
    }    
   
  ]
 }
 ]
}