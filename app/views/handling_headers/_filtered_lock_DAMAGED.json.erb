{
 success: true,
 items: [
 {
  xtype: 'container',
  closable: true,
  title: 'Danneggiati',
    layout: {
	    type: 'vbox',
	    pack: 'start',
	    align: 'stretch'
	},
	
  	

  items: [
       
   // grid con righe import
		 {
				flex: 1,
				layout: 'fit',
        	    title: <%= raw t('forms.damageds.details_label').to_json -%>, flex: 50,
        	    tools: [
                ],
        	    xtype: 'gridpanel',
				autoScroll: true,  
				scroll: true,      	    
        	    store: new Ext.data.Store({
        	    	autoLoad: true,
        	    	fields: [],
        	    	proxy: {
        	            type: 'ajax',
        	            url: <%= raw  (root_path + 'handling_headers/get_row_by_filtered_type').to_json -%>,
        	            extraParams: {filtered_type: <%= raw filtered_type.to_json -%>},
        	            reader: {
        	                type: 'json',
        	                rootProperty: 'items'
        	            }
        	        }
        	    }),
        	   
 		        	   
        	           	   
        	   dockedItems: [
        	   { 
        	    xtype: 'toolbar', dock: 'top', itemId: 'toptoolbar',
        	    items: [{
				    xtype: 'form',	
				    height: 50,
				    layout: {
					    type: 'hbox',
					    pack: 'start',
					    align: 'stretch'
					},
				    padding: '10 10 10 10',
				    items: [
				    	{
				    		flex: 1,
				            xtype: 'fieldcontainer',
				            fieldLabel: <%= raw t('forms.damageds.date_time').to_json -%>, labelAlign: 'right',
				            layout: 'hbox',
				            items: [
				            	{xtype: 'datefield', name: 'datetime_op_date', width: 120},
				            	{xtype: 'timefield', name: 'datetime_op_time', width:  70},
				            ]
				      }, {	
								flex: 1, padding: '0 0 0 10',
								xtype: 'checkboxfield',
				                boxLabel: <%= raw t('forms.damageds.disable_request').to_json -%>,
				                name: 'hide_check',
				                inputValue: '1'
				      }    
				     
				    ]
				 }, '->',  {iconCls: 'fa fa-refresh', handler: function(event, toolEl, panel){ 
				 						console.log(this.up('grid'));
				 						this.up('grid').getStore().load();}}
				 ]
			  }
			],
        	           	    
        	    
			    columns: [{
			        dataIndex: 'container_number',
			        text: <%= raw t('forms.damageds.sequence').to_json -%>,
			        width: 50,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         return '<h5>' + (rowIndex + 1) + '</h5>';
			        }			        
			    }, {
			        dataIndex: 'container_number',
			        text: <%= raw t('forms.damageds.container').to_json -%>,
			        width: 220,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         return '<h1>' + rec.get('container_number') + '</h1>';
			        }			        
			    }, {
			        dataIndex: 'container_number',
			        text: <%= raw t('forms.damageds.details').to_json -%>,
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         ret = '';
			         ret += '<table class=import_item_detail>';
			         ret += '<tr><th>Compagnia</th><td>' + rec.data.shipowner.name + '</td></tr>';
			         ret += '<tr><th>Equipment</th><td>' + rec.get('equipment_id_Name') + '</td></tr>';
			         ret += '<tr><th>Stato</th><td>' + rec.get('container_status') + '</td></tr>';			         			         
			         ret += '</table>';
			         return ret;
			         
			        }			        	        
			    }, {
			        dataIndex: 'container_number',
			        text: <%= raw t('forms.damageds.date').to_json -%>,
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         ret = '';
			         ret += '<table class=import_item_detail>';			         
					 ret += '<tr><th>Segnalato il</th><td>' + Ext.util.Format.date(rec.get('get_lock_DAMAGED_date'), 'd-m-Y H:i:s') + '</td></tr>';			         
			         ret += '</table>';
			         return ret;
			         
			        }			        	        
			    }        
        ],
			    
			    

			    
			    listeners: {
					    celldblclick: function(gridView,htmlElement,columnIndex,rec){
					        if (columnIndex == 1) { //doppio click sul num_container... apro il movimento aperto
									new_rec = HandlingHeader.load(rec.get('id'));
							        newPanel = Ext.create('FeedViewer.MovimentoPanel', {
										title: 'Mov. ' + rec.get('container_number'),
										closable: true			
							        });
							        
			                		newPanel.getViewModel().setData({rec: new_rec, 
			                			is_handling_editable: false,
			                			is_container_editable: false
			                		});
			                    	myApp.feedInfo.add(newPanel).show();
						            myApp.feedInfo.setActiveTab(myApp.feedInfo.items.length - 1);    
					        }
					    }
					}

				    

                        	    
        	}    
   
   
   
  ]
 }
 ]
}