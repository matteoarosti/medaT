{
 success: true,
 items: [
 {
  xtype: 'container',
  closable: true,
  title: 'Import',
  layout: 'fit',
  items: [
 
/* 
   {
    xtype: 'form',
    height: 100,
    layout: {
	    type: 'hbox',
	    pack: 'start',
	    align: 'stretch'
	},
    padding: '10 10 10 10',
    items: [
     {xtype: 'textfield', value: '<%= @ih.ship.name.to_s -%>', fieldLabel: 'Nave', editable: false, flex: 1},
     {xtype: 'textfield', value: '<%= @ih.voyage.to_s -%>', fieldLabel: 'Viaggio', editable: false, flex: 1}
    ]
   }
*/   

   
   // grid con righe import
		, {
				flex: 1,
				layout: 'fit',
        	    title: 'Righe import', flex: 50,
        	    tools: [
                ],
        	    xtype: 'gridpanel',
				autoScroll: true,  
				scroll: true,      	    
        	    store: new Ext.data.Store({
        	    	autoLoad: true,
        	    	fields: [],
        	    	proxy: {
        	            type: 'ajax',
        	            url: '/import_headers/get_import_row',
        	            extraParams: {import_header_id: <%= @ih.id -%>},
        	            reader: {
        	                type: 'json',
        	                rootProperty: 'items'
        	            }
        	        }
        	    }),
        	    
			    columns: [{
			        dataIndex: 'container_number',
			        text: 'Seq',
			        width: 50,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         return '<h5>' + (rowIndex + 1) + '</h5>';
			        }			        
			    }, {
			        dataIndex: 'container_number',
			        text: 'Container',
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         return '<h1>' + rec.get('container_number') + '</h1>';
			        }			        
			    }, {
			        dataIndex: 'container_number',
			        text: 'Note',
			        flex: 1	        
			    }, {
			        text: 'Ok', width: 100, hidden: false, sortable: false,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			        	if (Ext.isEmpty(rec.get('status')) == false) return '';
			            var id = Ext.id();
			            setTimeout(function() {
			                var buttonOK = Ext.create('Ext.button.Button', {
								text: '<i class="fa fa-check-circle fa-3x"></i>',
		                		scale: 'large',			                    
			                        handler: function(grid, rowIndex, colIndex, a, b) {
										Ext.Ajax.request({
										   method: 'POST',
										   url: '<%= url_for(:controller=>'import_items', :action=>'set_ok') -%>',
										   params: {rec_id: rec.get('id')},
										   success: function(response, opts) {
										      store.remove(rec);
										   },
										   failure: function(response, opts) {
										      console.log('server-side failure with status code ' + response.status);
										   }
										});

			                        }, scope: rec

			                });
			                
			                if (Ext.get(id)) {
			                    buttonOK.render(Ext.get(id));
			                }
			            }, 1);
			            return '<div id="' + id + '"></div>';
			        }
			     }, {
			        text: 'Danneggiato', width: 100, hidden: false, sortable: false,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			        	if (Ext.isEmpty(rec.get('status')) == false) return '';			        
			            var id = Ext.id();
			            setTimeout(function() {

			                var buttonRotto = Ext.create('Ext.button.Button', {
								text: '<i class="fa fa-warning fa-3x"></i>',
		                		scale: 'large',			                    
			                        handler: function(grid, rowIndex, colIndex, a, b) {
										Ext.Ajax.request({
										   method: 'POST',
										   url: '<%= url_for(:controller=>'import_items', :action=>'set_damaged') -%>',
										   params: {rec_id: rec.get('id')},
										   success: function(response, opts) {
										      store.remove(rec);
										   },
										   failure: function(response, opts) {
										      console.log('server-side failure with status code ' + response.status);
										   }
										});

			                        }, scope: rec

			                });			                
			                if (Ext.get(id)) {
			                    buttonRotto.render(Ext.get(id));
			                }
			            }, 1);
			            return '<div id="' + id + '"></div>';
			        }
			     }   
        
        ],
			    
			    

			    
			    listeners2: {
					    cellclick: function(gridView,htmlElement,columnIndex,dataRecord){
					        console.log(gridView);
					        console.log(htmlElement);
					        console.log(columnIndex);
					        console.log(dataRecord);
					    }
					}
				    

                        	    
        	}    
   
   
   
  ]
 }
 ]
}