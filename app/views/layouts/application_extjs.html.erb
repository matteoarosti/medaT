<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= content_for?(:title) ? yield(:title) : "Meda T" %></title>
    <meta name="description" content="<%= content_for?(:description) ? yield(:description) : "Meda T" %>">

    <%
     #disattivo, altrimenti provoca errori con css extjs
     #stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track' => true
     %>
	<%= stylesheet_link_tag 'application_extjs', media: 'all', 'data-turbolinks-track' => true %>     
    
   <!-- ExtJS -->
	 <link rel="stylesheet" type="text/css" href="<%= root_path -%>ext-5.0.1_only/ext-theme-crisp-all.css">	 	 
	 <%= javascript_include_tag "/ext-5.0.1_only/ext-all.js" %>
	 <%= javascript_include_tag "/ext-5.0.1_only/ext-theme-crisp.js" %>
	 <%= javascript_include_tag "/ext-5.0.1_only/ext-locale-it.js" %>	  
   <!-- //ExtJS -->
     
         
    <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
    
    <%= csrf_meta_tags %> 
    
    <script type="text/javascript">
		try {
		  // FORZO IL PASSAGGIO DEL TOKEN PER LE ESECUZIONI AJAX
		  // altrimenti ho CSRF authenticity token error
		  // (token richiesto da protect_from_forgery)
		  m_token = Ext.select("meta[name='csrf-token']").elements[0].getAttribute('content');
		 
		  // Ensure the Rails CSRF token is always sent
		  Ext.Ajax.on('beforerequest', function(o,r) {
		    r.headers = Ext.apply({
		      'Accept': 'application/json',
		      'X-CSRF-Token': m_token
		    }, r.headers || {});
		  });
		} catch (e) {
		   console.log('CSRF protection appears to be disabled');
		   console.log(e);
		}   
		
		
		
		// ****** PER BUG UPDATE PROXY SU BUFFERED STORE	
		Ext.define('Ext.ux.fixed.BufferedStore', {
		    override: 'Ext.data.BufferedStore',
		    contains: function(record) {
		        return this.indexOf(record) > -1;
		    }
		});	
		
		//font awesome di default
		Ext.setGlyphFontFamily('FontAwesome');
		



    function renderInstall(value, id, r)
    { 
            var m_id = Ext.id();
				Ext.Function.defer(createGridButton, 30, this, ['Install', m_id, r]);
                //createGridButton.defer(1, this, ['Install', id, r]);
                return('<div id="' + m_id + '"></div>');
 
    }
    function createGridButton(value, id, record) {
        new Ext.Button({
            text: value
            //,iconCls: IconManager.getIcon('package_add')
            ,handler : function(btn, e) {
                // do whatever you want here
            }
        }).render(document.body, id);
    }
		
		
		
		
		
		 
    </script>    
    
    

    
<!--    
	<script type="text/javascript" src="/FeedViewer/MovimentoPanel.js"></script>
	<script type="text/javascript" src="/FeedViewer/ScGrid.js"></script>	
    <script type="text/javascript" src="/viewer/FeedPost.js"></script>
    <script type="text/javascript" src="/viewer/FeedDetail.js"></script>
    <script type="text/javascript" src="/viewer/FeedGrid.js"></script>
    <script type="text/javascript" src="/viewer/FeedInfo.js"></script>
    <script type="text/javascript" src="/viewer/FeedPanel.js"></script>
    <script type="text/javascript" src="/viewer/01_MenuPanel.js"></script>

    <script type="text/javascript" src="/viewer/FeedWindow.js"></script>
    <script type="text/javascript" src="/viewer/Sim.js"></script>
-->    
    
   <%= yield %>    
    
  </head>
  <body>
  </body>
</html>
