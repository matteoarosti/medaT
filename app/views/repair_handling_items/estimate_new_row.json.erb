{
 "success": true,
 "items": [
  {
   xtype: 'form',
   title: '', 
   closable: false,
   flex: 1,
	layout: {
	    type: 'vbox',
	    align : 'stretch',
	    pack  : 'start',
	}, 
     defaults: {
     	 xtype: 'textfield',
     	 margin: '10 10 0 10',
     },	
     
    items: [       
     	{xtype: 'hidden', name: 'id', value: '<%= @rei.id %>'},
		{xtype: 'hidden', name: 'repair_handling_item_id', value: '<%= @rei.repair_handling_item.id %>'},
		
		<%= raw extjs_std_combo('id', @rei.repair_processing.repair_position,
				:fieldLabel => 'Posizione',
				:input_name => 'flt_repair_position',
				:valueField => 'id',
				:displayField => 'description_it',
				:store => extjs_std_store_url(url_for(:controller=>'repair_handling_items', :action=>'get_positions_by_rhi', :rhi_id => @rhi.id)),
				:listeners => "change: function(combo, record, index) {
								  this.up('form').do_refresh_on_change_position();			  
							    }"
			)				
				 -%>,

		<%= raw extjs_std_combo('id', @rei.repair_processing.repair_component,
				:fieldLabel => 'Componente',
				:input_name => 'flt_repair_component',		
				:valueField => 'id',
				:displayField => 'description_it',
				:store => extjs_std_store_url(url_for(:controller=>'repair_handling_items', :action=>'get_components_by_rhi', 
						:rhi_id => @rhi.id, :flt_repair_position => @rei.repair_processing.repair_position_id)),
				:listeners => "change: function(combo, record, index) {
								  this.up('form').do_refresh_on_change_component();			  
							    }"
				
			) -%>,
		
		     	
		<%= raw extjs_std_combo('repair_processing_id', @rei,
				:fieldLabel => 'Lavorazione',
				:valueField => 'repair_processing_id',
				:displayField => 'repair_processing_description',
				:store => extjs_std_store_url(url_for(:controller=>'repair_handling_items', :action=>'get_processings_by_rhi', 
						:rhi_id => @rhi.id, :flt_repair_position  => @rei.repair_processing.repair_position_id,
											:flt_repair_component => @rei.repair_processing.repair_component_id)),
				:listeners => "change: function(combo, record, index) {
								  this.up('form').do_refresh_on_change_processing();			  
							    }"
				
			) -%>,
		
		<%= raw extjs_std_numberfield('quantity', @rei, {:allowBlank => false, :minValue => 1}) -%>,		
		<%= raw extjs_std_textfield('side', @rei, {:allowBlank => true}, {:maxLength => 20}) -%>,
		
		<%= raw extjs_std_textareafield('provider_notes', @rei, {:fieldLabel => "Note"}, {:width => "100%"}) -%>,
		
	   	{xtype: 'fieldset',
         title: '',
         layout: {type: 'hbox'},
         items: [				
		
	   		<%= raw [   		
	   			extjs_std_textfield('provider_time', @rei, {:allowBlank => true, :fieldLabel => 'Tempo'}, {:disabled => true}), 
	   			extjs_std_textfield('provider_material_price', @rei, {:allowBlank => true, :fieldLabel => 'Materiale'}, {:disabled => true}) 
	   			].join(',') -%>
	   	]
	   }					
     	     	
	],
    
   buttons: [
   

<% if @edit_row == true %>
    {
        text: '<i class="fa fa-navicon fa"></i> Elimina', cls: 'btn-del',
        handler: function(btn, evt) {
        	 m_win = this.up('window');
        	 form = this.up('form').getForm();

			  Ext.MessageBox.confirm('Richieta conferma', 'Confermi eliminazione riga?', function(btn){
			   if(btn === 'yes'){

						form.submit({
							clientValidation: false, //without validation
	                        url: '<%= url_for(:controller => 'repair_handling_items', :action=>'destroy_rei') -%>', 
	                        success: function(fp, o) {
	                        	m_win.fireEvent('onClose');
	                            m_win.close();
	                        },
							failure: function(fp, op) {
								var result = Ext.JSON.decode(op.response.responseText);
								Ext.MessageBox.show({
			                        title: 'Errore',
			                        msg: result.message,
			                        buttons: Ext.Msg.OK
		                    	});                                
								btn.enable();
	                        }	                        
	                    });             	
             	}
              });
        	
        } //handler Aggiungi
    },  //Aggiungi
<% end %>    
   
   
   
 <%
  button_text = 'Aggiungi'
  button_text = 'Modifica' if @edit_row == true
 %>  
    {
        text: '<i class="fa fa-navicon fa"></i> <%= button_text -%>',
        handler: function(btn, evt) {
        	 m_win = this.up('window');
        	 form = this.up('form').getForm();
             if (form.isValid()) {
             	btn.disable();
						form.submit({
	                        url: '<%= url_for(:controller => 'repair_handling_items', :action=>'save_rei') -%>', 
	                        success: function(fp, o) {
	                        	m_win.fireEvent('onClose');
	                            m_win.close();
	                        },
							failure: function(fp, op) {
								var result = Ext.JSON.decode(op.response.responseText);
								Ext.MessageBox.show({
			                        title: 'Errore',
			                        msg: result.message,
			                        buttons: Ext.Msg.OK
		                    	});                                
								btn.enable();
	                        }	                        
	                    });             	
             	
			 }
        	
        } //handler Aggiungi
    } //Aggiungi
    
   ] 
   
   
   , do_refresh_on_change_position: function(){
		      f = this.getForm().findField('flt_repair_component');
		      f.getStore().proxy.extraParams =  this.getForm().getValues();
		      f.getStore().load();
    }     
   
   , do_refresh_on_change_component: function(){
		      f = this.getForm().findField('repair_processing_id');
		      f.getStore().proxy.extraParams =  this.getForm().getValues();
		      f.getStore().load();
    }     

   , do_refresh_on_change_processing: function(){
		      f = this.getForm().findField('repair_processing_id');
		      if (Ext.isEmpty(f.selection)){
		      	this.getForm().findField('provider_time').setValue('');
		      	this.getForm().findField('provider_material_price').setValue('');
		      } else {
		      	this.getForm().findField('provider_time').setValue(f.selection.data.provider_time);
		      	this.getForm().findField('provider_material_price').setValue(f.selection.data.provider_material_price);		      
		      }		      

    }     
    
  }
 ]
}