<h1>Giacenze Terminal - Sintetica</h1>

<%
#Recupero elenco movimenti in base ai parametri

formValues = JSON.parse params['formValues']
formValues = JSON.parse params['formValues']


items = HandlingHeader.is_in_terminal().not_closed()
items = items.where(shipowner_id: formValues['shipowner_id']) unless formValues['shipowner_id'].blank?
items = items.where(container_FE: formValues['fl_FE']) unless formValues['fl_FE'].to_s.empty?

group_shipowner = items.group_by { |d| d.shipowner_id }
%>


<%
 ######################################################
 #ShipOwner
 ###################################################### 
%>
<% group_shipowner.each do |so_id, so_val| %>
 <% so = Shipowner.find(so_id) %>

    <p class="bg-primary" style="padding: 10px"><%= so.name -%></p>
 

	<%
 	######################################################
 	#PIENI/VUOTI
 	###################################################### 
	%>
 	<% group_op = so_val.group_by { |d|
 	
 		#gestisco raggruppamento con un array
 		k = {}
 		k[:container_FE] = d.container_FE
 		
 		#separo anche in base al lock
 		k[:lock_type] = d.lock_type
 		
 		#se un 'DAMAGED' verifico se e' un autorizzato
 		if d.lock_type == 'DAMAGED'
 			rhi = d.get_open_repair_handling_item
 			if !rhi.nil?
 			 if !rhi.estimate_authorized_at.nil?
 			  k[:lock_type] = 'DAMAGED_AU'
 			 end
 			end
 		end
 		
 		#i pieni vengono divisi tra fase di import e export (se hanno booking) 		
 		if d.container_FE == 'F'
 		 ie = d.with_booking == true ? 'E' : 'I'
 		 k[:in_import_export] = ie
 		end  
 	
 		k 	
 	} %>
	<% group_op.sort_by{|a|
	 a[0][:container_FE].to_s}.each do |op_id, op_val| %>

 		<p class="bg-success" style="padding: 5px 10px"> 		
 			<%
 				case op_id[:container_FE]
 				 when "E" 
 				  fe = "VUOTI"
 				 when "F"
 				  fe = "PIENI"
 				 else
 				  fe = "NON DEFINITI"
 				end

 			 -%>
 			<%= fe.to_s -%>
 			<%= "[ Stato: Buono ] " if op_id[:lock_type].nil? -%>
 			<%= "[ Stato: #{t("lock_type.#{op_id[:lock_type]}")} ] " unless op_id[:lock_type].nil? -%>
 			<%= op_id[:in_import_export]=='I' ? ' (fase di IMPORT)' : ' (fase di EXPORT)' unless op_id[:in_import_export].nil? -%>
 			 (conteggio: <%= "#{op_val.count()}" -%>)
 		</p>


		<%
 		######################################################
 		#Tipo container
 		###################################################### 
		%>
		<table class="table table-striped table-bordered table-condensed">
		 <tr>
		  <th width=200>Dimensione</th>
		  <th>Tipo</th>
		  <th width=80>Quantit&agrave;</th>
		 </tr>
 		
		<% op_val.group_by{|a| a.equipment}.sort{|a,b| a[0].sizetype <=> b[0].sizetype}.each do |row| %>		
			<% eq = row[0] %>
 			<tr>
				<td><%= eq.sizetype -%></td>
				<td><%= eq.equipment_type -%></td>				
				<td align=right><%= row[1].count -%></td>
			</tr>
		<% end %>
		</table>


	<% end %>
 
<% end %>