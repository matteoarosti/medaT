{
 "success": true,
	 "items": [
	 	{
	 	 xtype: "panel",
	 	 id: 'ship_prepares_new',
	 	 title: "New ShipPrepare",
	 	 closable: true,
		 layout: {
		    type: 'vbox',
		    align : 'stretch',
		    pack  : 'start',
		 }, 
	 	 items: [ 
			  {
			   xtype: 'form',
			   flex: 1,	      	
			   
			   flex: 1,
				layout: {
				    type: 'vbox',
				    align : 'stretch',
				    pack  : 'start',
				}, 
			     defaults: {
			     	 xtype: 'textfield',
			     	 margin: '10 10 0 10',
			     },	  
			     
			   items: [
			   
			    	<%= raw extjs_std_hiddenfield('id', @item) -%>
			    	
				  , <%= raw extjs_std_combo('ship_prepare_status', @item,
					    	{:store => extjs_std_store_data(@item.status_get_data_json), :allowBlank=>false}) -%>									      			      
			    	
			      , <%= raw extjs_std_combo_model('customer', @item) -%>
			      , <%= raw extjs_std_combo_model('ship', @item) -%>
			      , <%= raw extjs_std_textfield('voyage', @item) -%>
			      , <%= raw extjs_std_datefield('departure_date', @item, {:allowBlank=>true, :fieldLabel => 'Data inizio lavorazione'}) -%>
			      , <%= raw extjs_std_combo_model('pier', @item, {:fieldLabel => 'Banchina'}) -%>
			      
			      , <%= raw extjs_std_numberfield('price_range_A_val', @item, {:fieldLabel => 'Tariffa movim. std'}) -%>
			      , <%= raw extjs_std_numberfield('price_range_B_val', @item, {:fieldLabel => 'Tariffa movim. fest.'}) -%>
			      
			      			      
			      , <%= raw extjs_std_textareafield('notes', @item) -%>			      
			    ]
			    
			    
				, buttons: [
					{
			            text: 'Salva',
			            handler: function (btn, evt) {              
			             form = this.up('form').getForm();
			             if (form.isValid()) {
			             
			             
							  Ext.Ajax.request({
				                    url: <%= raw url_for(:controller=>'ship_prepares', :action=>'create_new_exe').to_json -%>,
				                    waitMsg: 'Salvataggio in corso....',
									method:'POST',                    
				                    jsonData: {data: form.getValues()},	
				             	
									success: function(result, request) {					
										var returnData = Ext.JSON.decode(result.responseText);
										
										//error
										if (returnData.success == false){
											Ext.MessageBox.show({
						                        title: 'EXCEPTION',
						                        msg: returnData.message,
						                        icon: Ext.MessageBox.ERROR,
						                        buttons: Ext.Msg.OK
					                    	})
					                      return false;										
										}								
						 							
						 				//ok
						 				  Ext.Msg.alert('Message', 'Registrazione avvenuta con successo');
						 				  form.reset();
						 							
									}, scope: this,
									
									failure: function(rec, op) {
										var result = Ext.JSON.decode(op.getResponse().responseText);
										Ext.MessageBox.show({
					                        title: 'EXCEPTION',
					                        msg: result.message,
					                        //icon: Ext.MessageBox.ERROR,
					                        buttons: Ext.Msg.OK
				                    	})					
									}, scope: this,						
													 
						    	});	    
			             
			             }             
			           }
			        }					
				] //buttons
			    
			    
			   }
		 ]
		}	   
	 ]
}