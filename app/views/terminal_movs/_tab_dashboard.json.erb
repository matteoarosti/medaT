{
 success: true,
 items: [
 {
  xtype: 'panel',
  title: 'Dashboard', closable: true,
  	layout: {
	    type: 'vbox',
	    align : 'stretch',
	    pack  : 'start',
	}, 
	
  listeners: {
   afterrender: function(comp){
   	var task = {
	    run: function(){
	        //aggiorno periodicamente i grafici
	        Ext.Array.each(comp.query('polar, chart', 'cartesian'), function(grafico){
	        	grafico.store.load();
	        });
	        
	    },
	    interval: 9*60*1000 //9 minuti (in millisecondi)
	}
	 
	Ext.TaskManager.start(task);
   }
  },
	
  items: [
  
	 {
	  xtype: 'panel',
	  flex: 0.4,
	  	layout: {
		    type: 'hbox',
		    align : 'stretch',
		    pack  : 'start',
		}, 

	   items: [
	   
		//andamenvo movimentazioni
		{
            xtype: 'cartesian',
            border: true,        
			flex: 1,	
			legend: {
    			docked: 'right'
			},			
			store: {
				xtype: 'store',
				autoLoad: true,	
				proxy: {
					url: '<%= url_for(:controller=>'terminal_movs', :action=>'tab_dashboard_movs_by_date') -%>', 
					method: 'POST',
					type: 'ajax',
		
					//Add these two properties
					actionMethods: {
						read: 'POST'
					},
		
					reader: {
						type: 'json',
						method: 'POST',
						rootProperty: 'items'
					}
				},
					
				fields: [] //serve
			}, //store					   
	   
	   
	   
			axes: [{
                type: 'numeric',
                position: 'left',
                adjustByMajorUnit: true,
                grid: true,
                fields: ['I'],
                minimum: 0,
                label: {
                	fontSize: 10
                }
            }, {
                type: 'category',
                position: 'bottom',
                grid: true,
                fields: ['op'],
                renderer: function(v){ return Ext.util.Format.date(v, 'D d/m'); },
                label: {
                	fontSize: 9,
                    rotate: {
                        degrees: -55
                    }
                }
            }],
            
            
            
			series: [{
                type: 'bar',
                axis: 'left',
                title: [ 'Mv Entrata', 'Mv Uscita', 'Mv Sbarco', 'Mv Imbarco' ],
                xField: 'op',
                yField: [ 'I', 'O', 'D', 'L'],
                stacked: true,
                style: {
                    opacity: 0.80
                },
                highlight: {
                    fillStyle: 'yellow'
                },
            }]            
            	   
		  }	   
	   
	   
	   ]
	  },
	   
  



  
  
  

	 {
	  xtype: 'panel',
	  flex: 1,
	  	layout: {
		    type: 'hbox',
		    align : 'stretch',
		    pack  : 'start',
		}, 

	   items: [


		{
            xtype: 'polar',
            border: true,        
			width: 300,	
			store: {
				xtype: 'store',
				autoLoad: true,	
				proxy: {
					url: '<%= url_for(:controller=>'terminal_movs', :action=>'tab_dashboard_open_movs_get_data') -%>', 
					method: 'POST',
					type: 'ajax',
		
					//Add these two properties
					actionMethods: {
						read: 'POST'
					},
		
					reader: {
						type: 'json',
						method: 'POST',
						rootProperty: 'items'
					}
				},
					
				fields: [] //serve
			}, //store        	
        	
        	
        	
            insetPadding: 20,
            innerPadding: 20,
            //legend: {
            //    docked: 'left'
            //},
            interactions: ['rotate', 'itemhighlight'],
            sprites: [{
                type: 'text',
                text: 'Movimenti aperti/lock',
                font: '22px Helvetica',
                width: 100,
                height: 30,
                x: 40, // the sprite x position
                y: 20  // the sprite y position
            }],
            series: [{
                type: 'pie',
                angleField: 'data1',
                donut: 50,
                label: {
                    field: 'os',
                    display: 'outside'
                },
                highlight: true,
                tooltip: {
                    trackMouse: true,
                    style: 'background: #fff',
                    renderer: function(storeItem, item) {
                        //this.setHtml(storeItem.get('os') + ': ' + storeItem.get('data1'));
                        this.setHtml(storeItem.get('os'));
                    }
                }
            }]
        }





		, {
            xtype: 'polar',
            width: 300,
            border: true,
        	
			store: {
				xtype: 'store',
				autoLoad: true,	
				proxy: {
					url: '<%= url_for(:controller=>'terminal_movs', :action=>'tab_dashboard_in_out_get_data') -%>', 
					method: 'POST',
					type: 'ajax',
		
					//Add these two properties
					actionMethods: {
						read: 'POST'
					},
		
					reader: {
						type: 'json',
						method: 'POST',
						rootProperty: 'items'
					}
				},
					
				fields: [] //serve
			}, //store        	
        	
        	
        	
            insetPadding: 20,
            innerPadding: 20,
            //legend: {
            //    docked: 'left'
            //},
            interactions: ['rotate', 'itemhighlight'],
            sprites: [{
                type: 'text',
                text: 'Mov. Terminal',
                font: '22px Helvetica',
                width: 100,
                height: 30,
                x: 40, // the sprite x position
                y: 20  // the sprite y position
            }],
            series: [{
                type: 'pie',
                angleField: 'data1',
                donut: 50,
                label: {
                    field: 'os',
                    display: 'outside'
                },
                highlight: true,
                tooltip: {
                    trackMouse: true,
                    style: 'background: #fff',
                    renderer: function(storeItem, item) {
                        //this.setHtml(storeItem.get('os') + ': ' + storeItem.get('data1'));
                        this.setHtml(storeItem.get('os'));
                    }
                }
            }]
        }








		, {
            xtype: 'polar',
            width: 300,
            border: true,
        	
			store: {
				xtype: 'store',
				autoLoad: true,	
				proxy: {
					url: '<%= url_for(:controller=>'terminal_movs', :action=>'tab_dashboard_shipowner_get_data') -%>', 
					method: 'POST',
					type: 'ajax',
		
					//Add these two properties
					actionMethods: {
						read: 'POST'
					},
		
					reader: {
						type: 'json',
						method: 'POST',
						rootProperty: 'items'
					}
				},
					
				fields: [] //serve
			}, //store        	
        	
        	
        	
            insetPadding: 20,
            innerPadding: 20,
            //legend: {
            //    docked: 'left'
            //},
            interactions: ['rotate', 'itemhighlight'],
            sprites: [{
                type: 'text',
                text: 'Compagnia',
                font: '22px Helvetica',
                width: 100,
                height: 30,
                x: 40, // the sprite x position
                y: 20  // the sprite y position
            }],
            series: [{
                type: 'pie',
                angleField: 'data1',
                donut: 50,
                label: {
                    field: 'os',
                    display: 'outside'
                },
                highlight: true,
                tooltip: {
                    trackMouse: true,
                    style: 'background: #fff',
                    renderer: function(storeItem, item) {
                        //this.setHtml(storeItem.get('os') + ': ' + storeItem.get('data1'));
                        this.setHtml(storeItem.get('os'));
                    }
                }
            }]
        }

	] 
   }


  ]
 }
 ]
}