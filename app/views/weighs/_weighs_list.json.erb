{
 success: true,
 items: [
 {
  xtype: 'container',
  closable: true,
  title: <%= raw "Pesate [#{filtered_type}]".to_json -%>,
    layout: {
	    type: 'vbox',
	    pack: 'start',
	    align: 'stretch'
	},  	

  items: [
       
   // grid con righe import
		 {
				flex: 1,
				layout: 'fit',
        	    tools: [
                ],
        	    xtype: 'gridpanel',
				autoScroll: true,  
				scroll: true,      	    
        	    store: new Ext.data.Store({
        	    	autoLoad: true,
        	    	fields: [],
        	    	proxy: {
        	            url: <%= raw  (root_path + 'weighs/get_row_by_filtered_type').to_json -%>,
        	            extraParams: {
        	            	filtered_type: <%= raw filtered_type.to_json -%>,
        	            	form_user: {}
        	            },
        	            reader: {
        	                type: 'json',
							method: 'POST',        	                
        	                rootProperty: 'items'
        	            },
        	            paramsAsJson: true,
						method: 'POST',
						type: 'ajax',
			
						//Add these two properties
						actionMethods: {
							read: 'POST'
						},        	            
        	            
        	        }
        	    }),
        	   
 		        	   
        	           	   
        	   dockedItems: [
        	   { 
        	    xtype: 'toolbar', dock: 'top', itemId: 'toptoolbar',
        	    items: [
        	            	    
<% if User.current.customer? == false %>        	    
        	    
					{iconCls: 'fa fa-search fa-2x', text: '', scale: 'large',					 	    
				 			handler: function(event, toolEl, panel){ 				 
			                    header_form = this.up('grid').getDockedComponent('toptoolbar').getComponent('search_in_medaT');
			                    header_form.search_in_medaT();				 			}
				 	},				 
        	    
        	    
				{
				    xtype: 'form', itemId: 'search_in_medaT',	
				    height: 80,
				    layout: {
					    type: 'hbox',
					    pack: 'start',
					    align: 'stretch'
					},
				    padding: '10 10 10 10',
				    
				    defaults: {
				    	xtype: 'textfield',
				    	labelAlign: 'right',
				    	width: 150, padding: '0 0 0 10',
				    	fieldStyle: 'font-size: 16px; text-transform: uppercase;',
		                enableKeyEvents: true,
		                listeners: {                   
			                'keypress': function(field,event){
			                    if (event.getKey() == event.ENTER){
			                        this.up('form').search_in_medaT();
			                    }
			                }                                   
			            }
			        },
			        
			        search_in_medaT: function() {
			                    //header_form = this.up('grid').getDockedComponent('toptoolbar').down('form').getForm();
			                    header_form = this.up('grid').getDockedComponent('toptoolbar').getComponent('search_in_medaT').getForm();			                    
			                    header_form_values = header_form.getValues();

				    			acs_show_win_std('Info container', <%= raw url_for(:controller=>'weighs', 
									     	 				:action=>'search_in_medaT').to_json -%>,
									     	 				{form_values: header_form_values}, 800, 400);			        
			        },
			        
			        
				    items: [
				 		{		
								width: 140, padding: '0 0 0 10', labelAlign: 'top',
				                fieldLabel: 'Ricerca', name: 'medaT_search_num_container'
				 		}
				    ]
				 }
				 
<% end %>				 
			        
        	    
        	    
        	    
        	    
        	    , '->', {
				    xtype: 'form', itemId: 'filter_in_weighs',
				    height: 80,
				    layout: {
					    type: 'hbox',
					    pack: 'start',
					    align: 'stretch'
					},
				    padding: '10 10 10 10',
				    
				    defaults: {
				    	xtype: 'textfield',
				    	labelAlign: 'top',
				    	width: 100, labelWidth: 70, padding: '10 0 0 10', margin: '0 4 0 0',
				    	fieldStyle: 'font-size: 16px; text-transform: uppercase;',
		                enableKeyEvents: true,
		                listeners: {                   
			                'keypress': function(field,event){
			                    if (event.getKey() == event.ENTER){
			                        this.up('form').start_refresh();
			                    }
			                }                                   
			            }
			        },
			        
			        start_refresh: function() {
			                    //header_form = this.up('grid').getDockedComponent('toptoolbar').down('form').getForm();
			                    header_form = this.up('grid').getDockedComponent('toptoolbar').getComponent('filter_in_weighs').getForm();			                    
			                    header_form_values = header_form.getValues();

				    			this.up('grid').store.proxy.extraParams.form_user = header_form_values;				 				 
				 				this.up('grid').getStore().load();			        
			        },

				    items: [
				 		
				 		<%= raw extjs_std_combo_model('customer', @item, {input_name: 'flt_customer_id'}, {width: 270, autoWidth: false}) -%>, 				 		
				 		{									
				                fieldLabel: 'Container', name: 'flt_num_container', width: 120
				 		}, {	
				                fieldLabel: 'Autista', name: 'flt_driver', width: 80
				 		}, {	
				                fieldLabel: 'Targa', name: 'flt_plate', width: 80
				 		}, {	
				                fieldLabel: 'Rimorchio', name: 'flt_plate_trailer', width: 80
				 		}, {	
				                fieldLabel: 'Book. (cl)', name: 'flt_booking_customer', width: 120
				 		}
				    ]
				 }
				 
				 ,  {iconCls: 'fa fa-refresh fa-2x', text: 'Refresh', scale: 'large', 
				 			handler: function(event, toolEl, panel){ 
				 
			                    header_form = this.up('grid').getDockedComponent('toptoolbar').getComponent('filter_in_weighs').getForm();
			                    header_form_values = header_form.getValues();

				    			this.up('grid').store.proxy.extraParams.form_user = header_form_values;				 				 
				 				this.up('grid').getStore().load();
				 			}
				 	}
				 ]
			  }
			],
        	           	    
        	    
			    columns: [{
			        dataIndex: 'container_number',
			        text: '',
			        width: 30,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         return '<h5>' + (rowIndex + 1) + '</h5>';
			        }			        
			    }, {
			        dataIndex: 'terminal_id',
			        text: 'Terminal',
			        width: 100,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			          if (!Ext.isEmpty(rec.get('terminal')))
			           ret = '<h1>' + rec.get('terminal').code + '</h1>';
			          else
			           ret = ''; 
			          return ret;			         
			        }			        
			    }, {
			        dataIndex: 'container_number',
			        text: <%= raw t('forms.damageds.container').to_json -%>,
			        width: 220,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         ret = '<h1>' + rec.get('container_number') + '</h1>';
			         
					  if (!Ext.isEmpty(rec.get('booking_customer')))
			            ret = ret + '<p>Booking: ' + rec.get('booking_customer') + '</p>';			         			         
			         
			          if (!Ext.isEmpty(rec.get('customer')))
			            ret = ret + '<h3>' + rec.get('customer').name + '</h3>';
			         
			          return ret;			         
			        }			        
			    }
			    
			    
			    , {
			        dataIndex: 'container_number',
			        text: <%= raw t('forms.to_be_handled.details').to_json -%>,
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {			         
			         
			         if (Ext.isEmpty(rec.get('plate')))
			          out_plate = '';
			         else
			          out_plate = '[' + rec.get('plate') + ']';
			          
			         ret = '';
			         ret += '<table class=import_item_detail>';
			         ret += '<tr><th>Autista</th><td>' + rec.get('driver') + '</td></tr>';
			         ret += '<tr><th>Targa</th><td>' + rec.get('plate') + '</td></tr>';
			         ret += '<tr><th>Targa rimorchio</th><td>' + rec.get('plate_trailer') + '</td></tr>';
			         ret += '</table>';
			         return ret;
			        }
			    }, {
			        text: 'Data',
			        flex: 1,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {
			         ret = '';
			         ret += '<table class=import_item_detail>';			         
					 ret += '<tr><th>Reg. il</th><td>' + Ext.util.Format.date(rec.get('created_at'), 'd-m-Y H:i') + '</td></tr>';			         
					 ret += '<tr><th>Pes. il</th><td>' + Ext.util.Format.date(rec.get('weighed_at'), 'd-m-Y H:i') + '</td></tr>';
			         ret += '</table>';
			         return ret;
			        }			        	        
			    }			        	        

<% if filtered_type != 'TO_WEIGH' -%>
			, {
			        text: 'Kg',
			        width: 60, dataIndex: 'weight', align: 'right',
			        xtype: 'numbercolumn', format:'0,000'       	        
			    }
<% end %>


<% if User.current.can?(:weigh, :ins_weigh) %>			    
				, {
			        text: 'Registra peso', width: 100, hidden: false, sortable: false,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {			        			        			        
			        	var loc_grid = this;
			        	
			        	if (rec.get('weigh_status') == 'CLOSE') return '';
			        	
			            var id = Ext.id();
			            setTimeout(function() {
			            			          
			                ok_img = 'fa-user';
			                var set_external = true;
			                var btn_cls = 'btn-warning';
			                
			                if (rec.get('type') == 'FROM_HI' && rec.get('to_weigh_in_terminal') == true) {
			                	ok_img = 'fa-truck';
			                	set_external = false;
			                	btn_cls = 'btn-ok';
			                }
			                if (rec.get('type') != 'FROM_HI') {
			                	ok_img = 'fa-truck';
			                	set_external = false;
			                	btn_cls = 'btn-ok';
			                }
			                	
			            
			                var buttonOK = Ext.create('Ext.button.Button', {
			                				                	
								text: '<i class="fa ' + ok_img + ' fa-3x"></i>',
								cls: btn_cls,								
		                		scale: 'large',			                    
			                        handler: function(button, b, c, d, e) {
			                        
			                        	//disabilito per prevenire doppia esecuizione
			                        	button.disable();
				                			                             
			                           header_form = loc_grid.getDockedComponent('toptoolbar').down('form').getForm();
			                           header_form_values = header_form.getValues();
			                             
           								loc_form = Ext.create('Ext.form.Panel', {
											    title: '',
											    frame: true,
											    bodyPadding: 10,
											    defaultType: 'textfield',
											    	layout: {
													    type: 'vbox',
													    align : 'stretch',
													    pack  : 'start',
													},
											    items: [
											      {xtype: 'hiddenfield', name: 'rec_id', value: rec.get('id')},
											      {xtype: 'hiddenfield', name: 'external'},
											      {xtype: 'hiddenfield', name: 'type', value: rec.get('type')},
											      {xtype: 'numberfield', name: 'weight', allowBlank: false, fieldLabel: 'Peso (Kg)', fieldStyle: 'font-size: 32px; text-transform: uppercase;'},
											      {xtype: 'numberfield', name: 'weight_container', allowBlank: false, fieldLabel: 'Kg container', fieldStyle: 'font-size: 20px; text-transform: uppercase;'},
											      {xtype: 'numberfield', name: 'weight_goods', allowBlank: false, fieldLabel: 'Kg merce', fieldStyle: 'font-size: 20px; text-transform: uppercase;'},
								 					{
											            xtype: 'filefield',
											            allowBlank: false,
											            emptyText: 'Seleziona file scansione cedolino',
											            fieldLabel: 'File',
											            name: 'file',
											            buttonText: '',
											            buttonConfig: {
											                iconCls: 'upload-icon'
											            }
											        },
											        
											        {xtype: 'textfield', name: 'driver', value: rec.get('driver'), fieldLabel: 'Autista'},
											        {xtype: 'textfield', name: 'plate', value: rec.get('plate'), fieldLabel: 'Targa'},
											        {xtype: 'textfield', name: 'plate_trailer', value: rec.get('plate_trailer'), fieldLabel: 'Targa rimorchio'},
											        
											        {xtype: 'hiddenfield', name: 'authenticity_token', value: '<%= form_authenticity_token %>'}											      
											      										    										    										    
											    ]
											    ,
								    			dockedItems: [{
												    xtype: 'toolbar',
												    dock: 'right',
												    width: 135,
													defaults: {
												        xtype: 'button', scale: 'medium', textAlign: 'left'
									                },			    
												    margin: '5 5 5 5',
											    
											     	items:
												        [{
												            text: 'Conferma',
												            scale: 'large', cls: 'btn-confirm',
												            handler: function (btn, evt) {
												                           
												             form = this.up('form').getForm();
												             tmp_win  = this.up('window');
												             if (form.isValid()) {
												                btn.disable();
												                
											                    form.submit({
											                        url: '<%= url_for(:action=>'save_weight') -%>',
											                        waitMsg: 'Salvataggio in corso....',
											                        success: function(fp, o) {
																	      loc_grid.store.remove(rec);
																	      loc_grid.store.load();
																	      tmp_win.close();
																	      
																	      //mostro subito immagine appena inserita
																     	 	new_win = acs_show_win_std('Cedolino', <%= raw url_for(:controller=>'weighs', :action=>'view_scan_file').to_json -%>,
																     	 		{rec_id: o.result.w_id}, 800, 400);										
																	      											                            
											                        },
																	failure: function(fp, o) {
											                            //msg('Success', 'Processed file "' + o.result.file + '" on the server');
										                                Ext.Msg.alert('Import non eseguito. ', o.result.message);	                            
											                        }	                        
											                    });
											                    return false;
												             }
												            }
												          }, 
												          
												          {
												            text: 'Chiudi',												            
												            scale: 'large',
												            handler: function (btn, evt) {
												            	tmp_win  = this.up('window');
												            	tmp_win.close();
												            }
												          }
												          
												          
														  , {
												            text: 'Elimina ric.',												            
												            scale: 'large',
												            handler: function (btn, evt) {
												            	form = this.up('form').getForm();
												            	tmp_win  = this.up('window');
												            	
																Ext.MessageBox.confirm('Richieta conferma', 'Eliminare l\'attivit&agrave; corrente?', function(btn){															
																	if(btn === 'yes'){													                   
													                    
  																		Ext.Ajax.request({
														                    url: <%= raw url_for(:action=>'delete_weight_ric').to_json -%>,
														                    waitMsg: 'Salvataggio in corso....',
																			method:'POST',                    
														                    jsonData: form.getValues(),	
														             	
																			success: function(result, request) {					
																			      loc_grid.store.remove(rec);
																			      //loc_grid.store.load();
																			      tmp_win.close();
																 							
																			}, scope: this,
																			
																			failure: function(rec, op) {
																				Ext.Msg.alert('Errore');
																			}, scope: this,																													
																    	});	 													                    
													                    														
																	} //if yes
																});
												            	
												            	
												            }
												          }												          
												          
												          , {xtype: 'tbfill'}, {
												            text: '<i class="fa fa-truck fa-2x"></i> Pesa',												            
												            scale: 'medium',
												            handler: function (btn, evt) {
												            	this.up('form').render_form(false)
												            }
												          }, {
												            text: '<i class="fa fa-user fa-2x"></i> Da autista',												            
												            scale: 'medium',
												            handler: function (btn, evt) {
												            	this.up('form').render_form(true)
												            }
												          }
												          
												         ]
	  												}], 
	  												
	  											listeners: {	
   													afterrender: function(comp){
   														this.render_form(set_external);
   													}
   												},
   												
   												render_form: function(external) {
   													f = this.getForm();
   													
   													f.findField('external').setValue(external);
   													if (external == true) {
   														//il camionista ha gia' il proprio cedolino
   														f.findField('weight').disable();   			f.findField('weight').hide();
   														f.findField('weight_container').enable();	f.findField('weight_container').show();
   														f.findField('weight_goods').enable();		f.findField('weight_goods').show();
   													} else {
   														//pesa eseguita in terminal
   														f.findField('weight').enable();				f.findField('weight').show();
   														f.findField('weight_container').disable();	f.findField('weight_container').hide();
   														f.findField('weight_goods').disable();		f.findField('weight_goods').hide();
   													}
   												}
   												
   												
   														  												
											});		
											
				                           loc_win = Ext.create('Ext.window.Window',{
											    layout: 'fit',
											    items: loc_form,
											    title: 'Registra peso',
											    width: 500,
											    height: 350,
											    id: 'myWindow'
											}).show();
														                             
			                           	return false;

			                        }, scope: rec

			                });
			                
			                if (Ext.get(id)) {
			                    buttonOK.render(Ext.get(id));
			                }
			            }, 1);
			            return '<div id="' + id + '"></div>';
			        }
			     }
<% end %>


		// -------------------------------- view image cedolino ---------------------------------
<% if filtered_type != 'TO_WEIGH' -%>		
				, {
			        text: 'Visualizza', width: 105, hidden: false, sortable: false,
			        renderer: function(value, metaData, rec, rowIndex, colIndex, store) {			        			        			        
			        	var loc_grid = this;
			        	
			        	if (rec.get('weigh_status') != 'CLOSE') return '';
			        	if (rec.get('external') == true) {
			        		var btn_cls = 'btn-warning';
			        		var icon_btn = 'fa-user';
			        	}
			        	else {
			        		var btn_cls = 'btn-ok';
			        		var icon_btn = 'fa-truck';
			        	}
			        	
			            var id = Ext.id();
			            setTimeout(function() {
			            
			                var buttonOK = Ext.create('Ext.button.Button', {
			                	
								text: '<i class="fa fa-search fa-3x"></i> <i class="fa ' + icon_btn + '"></i>',
								cls: btn_cls,
		                		scale: 'large',			                    
			                        handler: function(button, b, c, d, e) {
			                        				
						     	 	new_win = acs_show_win_std('Cedolino', <%= raw url_for(:controller=>'weighs', :action=>'view_scan_file').to_json -%>,
						     	 		{rec_id: rec.get('id')}, 800, 400);										
			                        				
			                        														                             
			                           	return false;
			                        }, scope: rec

			                });
			                
			                if (Ext.get(id)) {
			                    buttonOK.render(Ext.get(id));
			                }
			            }, 1);
			            return '<div id="' + id + '"></div>';
			        }
			     }
<% end %>


			    
			    
			    
			          
        ], //columns
			    
			    
				get_cls_button(rec){				
		        	cls_button = 'btn-warning';
		        	if (Ext.isEmpty(rec.get('estimate_authorized_at')) == false)
		        		cls_button = 'btn-ok';				
				
					return cls_button;
				},
			    
			    listeners: {
	                	itemcontextmenu : function(item, record, index, e, eOpts){
	                		eOpts.stopEvent();
                            var xy = eOpts.getXY();	                	
                            new Ext.menu.Menu({
                                items : [
                                         {
                                            text : '<i class="fa fa-edit fa-1x"> Modifica</i>',                                                                                                        
                                            handler: function(){
									     	 	new_win = acs_show_win_std('Modifica', <%= raw url_for(:controller=>'weighs', 
									     	 				:action=>'modify_record').to_json -%>,
									     	 				{rec_id: record.get('id'), from_grid_id: this.id}, 800, 400);										                                                    
                                            }, scope: this
                                          }, {
                                            text : '<i class="fa fa-picture-o fa-1x"> Sostituisci scansione cedolino</i>',                                                                                                        
                                            handler: function(){
									     	 	new_win = acs_show_win_std('Sostituisci scansione cedolino', <%= raw url_for(:controller=>'weighs', 
									     	 				:action=>'modify_image').to_json -%>,
									     	 				{rec_id: record.get('id'), from_grid_id: this.id}, 800, 400);										                                                    
                                            }, scope: this
                                          }
                                          
                                         ]
                               }).showAt(xy);
	                	
	                	}			    					    
					}

				    

                        	    
        	}    
   
   
   
  ]
 }
 ]
}
